Cross-Platform Solution with Keytar

The excellent part is that the keytar package I mentioned works
cross-platform, automatically using:

- macOS Keychain on Mac systems
- Windows Credential Manager on Windows systems
- Secret Service API/libsecret on Linux systems

This means you can use the exact same code on both platforms!
...

npm install keytar

Then, here's how to modify your code to use the macOS Keychain:

// Add this near the top of main.js after your imports
const keytar = require('keytar');

// Define constants for the service and account
const KEYCHAIN_SERVICE = 'WritersToolkit';
const KEYCHAIN_ACCOUNT = 'ANTHROPIC_API_KEY';

// Add this after your isPackaged check but before other initialization
// This attempts to load the API key from the macOS Keychain
async function loadApiKeyFromKeychain() {
  try {
    console.log('Attempting to load API key from keychain...');
    const apiKey = await keytar.getPassword(KEYCHAIN_SERVICE, KEYCHAIN_ACCOUNT);
    
    if (apiKey) {
      console.log('Successfully loaded API key from keychain');
      process.env.ANTHROPIC_API_KEY = apiKey;
      return true;
    } else {
      console.log('No API key found in keychain');
      return false;
    }
  } catch (error) {
    console.error('Error accessing keychain:', error);
    return false;
  }
}

// Call this function before initializing the tool system
await loadApiKeyFromKeychain();

